/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef, useState } from 'react'
import {  useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'
import { useDrag } from 'react-use-gesture'

type GLTFResult = GLTF & {
  nodes: {
    SchoolDesk_01: THREE.Mesh
  }
  materials: {
    SchoolDesk_01: THREE.MeshStandardMaterial
  }
}

export function SchoolDesk(props: JSX.IntrinsicElements['group']) {
  const width=1700;
  const height=1400
  const [position, setPosition] = useState([-1, -0.4, 0]);
  const aspect = width / height;

    const bind = useDrag(({ offset: [x, y] }) => {
      console.log(x,y,'-------',position)
        const [,, z] = position;
        setPosition([-(x / aspect), -(y / aspect), z]);
    }, { pointerEvents: true });

  const [tableScale,setTableScale] = useState(true)
  // const mesh = useRef()
 
  // useFrame((state, delta) => (mesh.current.rotation.x += 0.01))
  const { nodes, materials } = useGLTF('/SchoolDesk_01_4k.gltf/SchoolDesk_01_4k.gltf') as GLTFResult
  return (
    <group 
    scale={tableScale?2:3}
    // ref={mesh} 
    
    dispose={null}>
      <mesh {...bind()} position={position} onClick={()=>setTableScale(!tableScale)}  geometry={nodes.SchoolDesk_01.geometry} 
      material={materials.SchoolDesk_01}
      /> 
   
    </group> 
  )
}

useGLTF.preload('/SchoolDesk_01_4k.gltf/SchoolDesk_01_4k.gltf')
